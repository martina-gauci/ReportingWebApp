// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NEMESYS.Models;

namespace NEMESYS.Migrations
{
    [DbContext(typeof(NemesysContext))]
    [Migration("20190509142044_NEMESYS")]
    partial class NEMESYS
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NEMESYS.Models.Investigation", b =>
                {
                    b.Property<int>("InvestigationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfAction");

                    b.Property<DateTime>("DateOfSubmission");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReportId");

                    b.HasKey("InvestigationId");

                    b.HasIndex("ReportId");

                    b.ToTable("Investigations");
                });

            modelBuilder.Entity("NEMESYS.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAndTimeOfSpotting");

                    b.Property<DateTime>("DateOfSubmission");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvestigatorID");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Priority");

                    b.Property<int>("ReporterId");

                    b.Property<int>("Status");

                    b.Property<string>("TypeOfHazard")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("UpVoteCount");

                    b.HasKey("ReportId");

                    b.HasIndex("InvestigatorID");

                    b.HasIndex("ReporterId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("NEMESYS.Models.Upvote", b =>
                {
                    b.Property<int>("ReportId");

                    b.Property<int>("UserId");

                    b.HasKey("ReportId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Upvotes");
                });

            modelBuilder.Entity("NEMESYS.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NoOfReportsSubmitted");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Role");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NEMESYS.Models.Investigation", b =>
                {
                    b.HasOne("NEMESYS.Models.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("NEMESYS.Models.Report", b =>
                {
                    b.HasOne("NEMESYS.Models.User", "Investigator")
                        .WithMany()
                        .HasForeignKey("InvestigatorID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NEMESYS.Models.User", "Reporter")
                        .WithMany()
                        .HasForeignKey("ReporterId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("NEMESYS.Models.Upvote", b =>
                {
                    b.HasOne("NEMESYS.Models.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NEMESYS.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
